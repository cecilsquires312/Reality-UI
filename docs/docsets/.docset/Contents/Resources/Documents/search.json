{"Typealiases.html#/GestureBase":{"name":"GestureBase","abstract":"<p>Typealias to easily access UIGestureRecognizer and NSGestureRecognizer on iOS and macOS respectively</p>"},"Typealiases.html#/s:9RealityUI11GestureBasea":{"name":"GestureBase","abstract":"<p>Typealias to easily access UIGestureRecognizer and NSGestureRecognizer on iOS and macOS respectively</p>"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV4textSSSgvp":{"name":"text","abstract":"<p>The text to render.</p>","parent_name":"TextComponent"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV4fontSo6NSFontCvp":{"name":"font","abstract":"<p>The font to use.</p>","parent_name":"TextComponent"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV5width12CoreGraphics7CGFloatVvp":{"name":"width","abstract":"<p>The maximum width, in meters, of the text frame in the local coordinate system.","parent_name":"TextComponent"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV6height12CoreGraphics7CGFloatVvp":{"name":"height","abstract":"<p>The maximum height, in meters, of the text frame in the local coordinate system.","parent_name":"TextComponent"},"Structs/TextComponent.html#/color":{"name":"color","abstract":"<p>The color of the text material. <code>.label</code> by default (iOS)</p>","parent_name":"TextComponent"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV5colorSo7NSColorCvp":{"name":"color","abstract":"<p>The color of the text material. <code>.labelColor</code> by default (macOS)</p>","parent_name":"TextComponent"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV9extrusionSfvp":{"name":"extrusion","abstract":"<p>The extent, in meters, of the extruded text in the z-axis direction.</p>","parent_name":"TextComponent"},"Structs/TextComponent.html#/s:9RealityUI13TextComponentV13lineBreakModeSo06CTLinefG0Vvp":{"name":"lineBreakMode","abstract":"<p>How the text should wrap when reaching a frame boundary.</p>","parent_name":"TextComponent"},"Structs/SwitchComponent.html#/s:9RealityUI15SwitchComponentV4isOn7onColor03offH07padding6border0kH005thumbH0ACSb_So7NSColorCALS2fA2Ltcfc":{"name":"init(isOn:onColor:offColor:padding:border:borderColor:thumbColor:)","abstract":"<p>Creates a SwitchComponent using a list of completely optional parameters.</p>","parent_name":"SwitchComponent"},"Structs/SwitchComponent.html#/s:9RealityUI15SwitchComponentV7onColor03offF0ACSo7NSColorC_AGtcfc":{"name":"init(onColor:offColor:)","abstract":"<p>Creates the SwitchComponent with all default styles, only custom colours.</p>","parent_name":"SwitchComponent"},"Structs/StepperComponent/Style.html#/s:9RealityUI16StepperComponentV5StyleO9minusPlusyA2EmF":{"name":"minusPlus","abstract":"<p>Style of stepper with a + and - symbol</p>","parent_name":"Style"},"Structs/StepperComponent/Style.html#/s:9RealityUI16StepperComponentV5StyleO14arrowLeftRightyA2EmF":{"name":"arrowLeftRight","abstract":"<p>Style of stepper with a &ldquo;〈&rdquo; and &ldquo;〉&rdquo; symbol</p>","parent_name":"Style"},"Structs/StepperComponent/Style.html#/s:9RealityUI16StepperComponentV5StyleO11arrowDownUpyA2EmF":{"name":"arrowDownUp","abstract":"<p>Style of stepper with up and down pointing symbols</p>","parent_name":"Style"},"Structs/StepperComponent/Style.html":{"name":"Style","abstract":"<p>Stepper styles</p>","parent_name":"StepperComponent"},"Structs/StepperComponent.html#/init(style:backgroundTint:buttonTint:secondaryTint:)":{"name":"init(style:backgroundTint:buttonTint:secondaryTint:)","abstract":"<p>Create a StepperComponent for an RUIStepper object to add to your scene</p>","parent_name":"StepperComponent"},"Structs/StepperComponent.html#/s:9RealityUI16StepperComponentV5style14backgroundTint06buttonG009secondaryG0A2C5StyleO_So7NSColorCA2KSgtcfc":{"name":"init(style:backgroundTint:buttonTint:secondaryTint:)","abstract":"<p>Create a StepperComponent for an RUIStepper object to add to your scene</p>","parent_name":"StepperComponent"},"Structs/StepperComponent.html#/s:9RealityUI16StepperComponentV5styleA2C5StyleO_tcfc":{"name":"init(style:)","abstract":"<p>Create a StepperComponent with default properties of a given style</p>","parent_name":"StepperComponent"},"Structs/SliderComponent/SlidingState.html#/s:9RealityUI15SliderComponentV12SlidingStateO7startedyA2EmF":{"name":"started","abstract":"<p>Slider has started updating.</p>","parent_name":"SlidingState"},"Structs/SliderComponent/SlidingState.html#/s:9RealityUI15SliderComponentV12SlidingStateO7updatedyA2EmF":{"name":"updated","abstract":"<p>Slider has updated its value, but not for the first or last time in this update.</p>","parent_name":"SlidingState"},"Structs/SliderComponent/SlidingState.html#/s:9RealityUI15SliderComponentV12SlidingStateO5endedyA2EmF":{"name":"ended","abstract":"<p>Slider has reached its final position for this update.</p>","parent_name":"SlidingState"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV6lengthSfvp":{"name":"length","abstract":"<p>Length of the slider. The default is 10m.</p>","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV5valueSfvp":{"name":"value","abstract":"<p>The slider&rsquo;s current value. Ranges from 0 to 1.</p>","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV13minTrackColorSo7NSColorCvp":{"name":"minTrackColor","abstract":"<p>The color set to the material on the left side of the slider. Default <code>.systemBlue</code></p>","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV13maxTrackColorSo7NSColorCvp":{"name":"maxTrackColor","abstract":"<p>The color set to the material on the right side of the slider. Default <code>.systemGray</code></p>","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV10thumbColorSo7NSColorCvp":{"name":"thumbColor","abstract":"<p>The color set to the material of the thumb. Default <code>.white</code></p>","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV12isContinuousSbvp":{"name":"isContinuous","abstract":"<p>A Boolean value indicating whether changes in the slider’s value generate continuous update events.","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV9thicknessSfvp":{"name":"thickness","abstract":"<p>The thickness of the track in meters, default is 0.2.</p>","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV5stepsSivp":{"name":"steps","abstract":"<p>The nubmer of steps the slider should have.","parent_name":"SliderComponent"},"Structs/SliderComponent/SlidingState.html":{"name":"SlidingState","abstract":"<p>What stage the slider is in. Start is the first update, ended is the last, and updated","parent_name":"SliderComponent"},"Structs/SliderComponent.html#/s:9RealityUI15SliderComponentV6length13startingValue13minTrackColor03maxiJ005thumbJ09thickness12isContinuous5stepsACSf_SfSo7NSColorCA2MSfSbSitcfc":{"name":"init(length:startingValue:minTrackColor:maxTrackColor:thumbColor:thickness:isContinuous:steps:)","abstract":"<p>Creates a SliderComponent using a list of completely optional parameters.</p>","parent_name":"SliderComponent"},"Structs/ButtonComponent/Style.html#/s:9RealityUI15ButtonComponentV5StyleO11rectangularyA2EmF":{"name":"rectangular","abstract":"<p>A button style that is cuboid in shape.</p>","parent_name":"Style"},"Structs/ButtonComponent/Style.html":{"name":"Style","abstract":"<p>Style for an RUIButton object</p>","parent_name":"ButtonComponent"},"Structs/ButtonComponent.html#/s:9RealityUI15ButtonComponentV11defaultSizes5SIMD3VySfGvpZ":{"name":"defaultSize","abstract":"<p>Default size of the button, if no properties are specifically set.</p>","parent_name":"ButtonComponent"},"Structs/ButtonComponent.html#/s:9RealityUI15ButtonComponentV4size11buttonColor04baseG07padding7extrude8compress12cornerRadius5styleACs5SIMD3VySfG_So7NSColorCAPS4fSgAC5StyleOtcfc":{"name":"init(size:buttonColor:baseColor:padding:extrude:compress:cornerRadius:style:)","abstract":"<p>Creates a ButtonComponent specifying the layout and appearance of a RUIButton</p>","parent_name":"ButtonComponent"},"Structs/ButtonComponent.html#/s:9RealityUI15ButtonComponentV5styleA2C5StyleO_tcfc":{"name":"init(style:)","abstract":"<p>Create a new ButtonComponent with defautl values for a given style</p>","parent_name":"ButtonComponent"},"Structs/ButtonComponent.html#/s:9RealityUI15ButtonComponentV5width6height5depth7padding12cornerRadiusACSf_S4fSgtcfc":{"name":"init(width:height:depth:padding:cornerRadius:)","abstract":"<p>Create a new rectangular style button.</p>","parent_name":"ButtonComponent"},"Structs/TurnComponent.html#/s:9RealityUI13TurnComponentV4axiss5SIMD3VySfGvp":{"name":"axis","abstract":"<p>Axis upon which the object will rotate.</p>","parent_name":"TurnComponent"},"Structs/TurnComponent.html#/s:9RealityUI13TurnComponentV11maxDistanceSfSgvp":{"name":"maxDistance","abstract":"<p>Maximum distance from the Entity centre where touches will still be picked up","parent_name":"TurnComponent"},"Structs/TurnComponent.html#/s:9RealityUI13TurnComponentV4axis11maxDistanceACs5SIMD3VySfG_SfSgtcfc":{"name":"init(axis:maxDistance:)","abstract":"<p>Create a new <code>TurnComponent</code></p>","parent_name":"TurnComponent"},"Structs/RUIComponent.html#/s:9RealityUI12RUIComponentV10ruiEnabledSbvp":{"name":"ruiEnabled","abstract":"<p>A Boolean value indicating whether the RealityUI Entity is enabled.</p>","parent_name":"RUIComponent"},"Structs/RUIComponent.html#/s:9RealityUI12RUIComponentV9isEnabled18respondsToLightingACSb_Sbtcfc":{"name":"init(isEnabled:respondsToLighting:)","abstract":"<p>Create a new <code>RUIComponent</code> for a RealityUI Entity</p>","parent_name":"RUIComponent"},"Structs/RUIComponent.html":{"name":"RUIComponent","abstract":"<p>A collection of properties for all RealityUI Entities.</p>"},"Structs/TurnComponent.html":{"name":"TurnComponent","abstract":"<p>A collection of properties for the entities that conform to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HasTurnTouch.html\">HasTurnTouch</a></code>.</p>"},"Structs/ButtonComponent.html":{"name":"ButtonComponent","abstract":"<p>A collection of properties for the entities that conform to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HasButton.html\">HasButton</a></code>.</p>"},"Structs/SliderComponent.html":{"name":"SliderComponent","abstract":"<p>A collection of resources that create the visual appearance a RealityUI Slider, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RUISlider.html\">RUISlider</a></code>.</p>"},"Structs/StepperComponent.html":{"name":"StepperComponent","abstract":"<p>A collection of resources that create the visual appearance a RealityUI Stepper.</p>"},"Structs/SwitchComponent.html":{"name":"SwitchComponent","abstract":"<p>A collection of resources that create the visual appearance a RealityUI Switch, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RUISwitch.html\">RUISwitch</a></code>.</p>"},"Structs/TextComponent.html":{"name":"TextComponent","abstract":"<p>Component containing all the data for the text to be rendered.</p>"},"Protocols/HasText.html#/s:9RealityUI7HasTextPAAE13textComponentAA0dF0Vvp":{"name":"textComponent","abstract":"<p>Component containing all the data for the text to be rendered.</p>","parent_name":"HasText"},"Protocols/HasText.html#/s:9RealityUI7HasTextPAAE4textSSSgvp":{"name":"text","abstract":"<p>The text to render.</p>","parent_name":"HasText"},"Protocols/HasText.html#/s:9RealityUI7HasTextPAAE4fontSo6NSFontCvp":{"name":"font","abstract":"<p>The font to use.</p>","parent_name":"HasText"},"Protocols/HasText.html#/s:9RealityUI7HasTextPAAE5colorSo7NSColorCvp":{"name":"color","abstract":"<p>The color of the text material.</p>","parent_name":"HasText"},"Protocols/HasText.html#/s:9RealityUI7HasTextPAAE15updateMaterialsyyF":{"name":"updateMaterials()","abstract":"<p>Update materials for all models in this RUIEntity</p>","parent_name":"HasText"},"Protocols/HasText.html#/s:9RealityUI7HasTextPAAE03setD0yySSSgF":{"name":"setText(_:)","abstract":"<p>Change the text currently presented on the HasText Entity</p>","parent_name":"HasText"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchP13switchChangedyAaB_pcSgvp":{"name":"switchChanged","abstract":"<p>Switch&rsquo;s isOn property has changed</p>","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE10switchnessAA0D9ComponentVvp":{"name":"switchness","abstract":"<p>The switch properties that defines the visual appearance and state.</p>","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE5setOn_8animatedySb_SbtF":{"name":"setOn(_:animated:)","abstract":"<p>Set the switch&rsquo;s current value</p>","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE7paddingSfvp":{"name":"padding","abstract":"<p>Padding (in meters) between the thumb and the inner capsule of the switch.","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE6borderSfvp":{"name":"border","abstract":"<p>Border (in meters) between the two outer capsules of the switch.","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE4isOnSbvp":{"name":"isOn","abstract":"<p>A Boolean value that determines the off/on state of the switch.","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE11borderColorSo7NSColorCvp":{"name":"borderColor","abstract":"<p>Color of the outer border. Default <code>Material.Color.black</code></p>","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE7onColorSo7NSColorCvp":{"name":"onColor","abstract":"<p>Color of the inner capsule when the switch is set to off. Default <code>Material.Color.systemGreen</code></p>","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE8offColorSo7NSColorCvp":{"name":"offColor","abstract":"<p>Color of the inner capsule when the switch is set to on. Default <code>Material.Color.lightGray</code></p>","parent_name":"HasSwitch"},"Protocols/HasSwitch.html#/s:9RealityUI9HasSwitchPAAE15updateMaterialsyyF":{"name":"updateMaterials()","abstract":"<p>Updates all materials in an entity, this is called internally whenever things change such as","parent_name":"HasSwitch"},"Protocols/HasStepper.html#/s:9RealityUI15HasRUIMaterialsP15updateMaterialsyyF":{"name":"updateMaterials()","parent_name":"HasStepper"},"Protocols/HasStepper.html#/s:9RealityUI10HasStepperPAAE7stepperAA0D9ComponentVvp":{"name":"stepper","abstract":"<p>Stepper component, containing all properties relating to the rendering of the stepper.</p>","parent_name":"HasStepper"},"Protocols/HasStepper.html#/s:9RealityUI10HasStepperPAAE5styleAA0D9ComponentV5StyleOvp":{"name":"style","abstract":"<p>Style of the stepper.</p>","parent_name":"HasStepper"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderP13sliderUpdatedyAaB_p_AA0D9ComponentV12SlidingStateOtcSgvp":{"name":"sliderUpdated","abstract":"<p>Called whenever the slider value updates.","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderPAAE12sliderLengthSfvp":{"name":"sliderLength","abstract":"<p>Length of the slider. The default is 10m.</p>","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderPAAE5valueSfvp":{"name":"value","abstract":"<p>The slider&rsquo;s current value. Ranges from 0 to 1.</p>","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderPAAE5stepsSivp":{"name":"steps","abstract":"<p>The nubmer of steps the slider should have.","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderPAAE12isContinuousSbvp":{"name":"isContinuous","abstract":"<p>A Boolean value indicating whether changes in the slider’s value generate continuous update events.","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderPAAE14trackThicknessSfvp":{"name":"trackThickness","abstract":"<p>The thickness of the track in meters, default is 0.2.</p>","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI9HasSliderPAAE10setPercent2to8animatedySf_SbtF":{"name":"setPercent(to:animated:)","abstract":"<p>Set the sliders position</p>","parent_name":"HasSlider"},"Protocols/HasSlider.html#/s:9RealityUI15HasRUIMaterialsP15updateMaterialsyyF":{"name":"updateMaterials()","parent_name":"HasSlider"},"Protocols/HasARTouch.html#/s:9RealityUI10HasARTouchP14arTouchStarted_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchStarted(_:hasCollided:)","abstract":"<p>Called when a new touch has begun on an Entity</p>","parent_name":"HasARTouch"},"Protocols/HasARTouch.html#/s:9RealityUI10HasARTouchP14arTouchUpdated_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchUpdated(_:hasCollided:)","abstract":"<p>Called when a touch is still on screen or a mouse is still down.</p>","parent_name":"HasARTouch"},"Protocols/HasARTouch.html#/s:9RealityUI10HasARTouchP12arTouchEndedyys5SIMD3VySfGSgF":{"name":"arTouchEnded(_:)","abstract":"<p>Touch has ended without issues.</p>","parent_name":"HasARTouch"},"Protocols/HasARTouch.html#/s:9RealityUI10HasARTouchP16arTouchCancelledyyF":{"name":"arTouchCancelled()","abstract":"<p>Called when touch has been interrupted.</p>","parent_name":"HasARTouch"},"Protocols/HasARTouch.html#/s:9RealityUI10HasARTouchP14collisionPlaneSo13simd_float4x4aSgvp":{"name":"collisionPlane","abstract":"<p>Plane to continue touches with, used for RUISlider + Others","parent_name":"HasARTouch"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonP16touchUpCompletedyAaB_pcSgvp":{"name":"touchUpCompleted","abstract":"<p>Button has been clicked callback, similar to UIKit <code>.touchUpInside</code></p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE6buttonAA0D9ComponentVvp":{"name":"button","abstract":"<p>Properties of the button to be rendered</p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE7paddingSfvp":{"name":"padding","abstract":"<p>Padding (in meters) between the base and the button. Default 0.1.</p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE4sizes5SIMD3VySfGvp":{"name":"size","abstract":"<p>Size of the RUIButton base</p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE12cornerRadiusSfSgvp":{"name":"cornerRadius","abstract":"<p>A corner radius applied to both the button and the button base.</p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE7extrudeSfvp":{"name":"extrude","abstract":"<p>Multiplyer amount that the button sticks out from the base when unpressed.","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE8compressSfvp":{"name":"compress","abstract":"<p>Multiplyer amount that the button sticks out from the base when pressed.","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE11buttonColorSo7NSColorCvp":{"name":"buttonColor","abstract":"<p>Color of the button</p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI9HasButtonPAAE9baseColorSo7NSColorCvp":{"name":"baseColor","abstract":"<p>Color of the button base</p>","parent_name":"HasButton"},"Protocols/HasButton.html#/s:9RealityUI15HasRUIMaterialsP15updateMaterialsyyF":{"name":"updateMaterials()","parent_name":"HasButton"},"Protocols/HasTurnTouch.html#/s:9RealityUI12HasTurnTouchPAAE14collisionPlaneSo13simd_float4x4aSgvp":{"name":"collisionPlane","abstract":"<p>Plane that we run the raycast against.</p>","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI12HasTurnTouchPAAE02arE7Started_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchStarted(_:hasCollided:)","abstract":"<p>Called when a new touch has begun on an Entity</p>","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI12HasTurnTouchPAAE02arE7Updated_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchUpdated(_:hasCollided:)","abstract":"<p>Called when a touch is still on screen or a mouse is still down.</p>","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI10HasARTouchP16arTouchCancelledyyF":{"name":"arTouchCancelled()","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI10HasARTouchP12arTouchEndedyys5SIMD3VySfGSgF":{"name":"arTouchEnded(_:)","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI12HasTurnTouchPAAE04turnE0AA0D9ComponentVvp":{"name":"turnTouch","abstract":"<p>The turn component for the entity.</p>","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI12HasTurnTouchPAAE8turnAxiss5SIMD3VySfGvp":{"name":"turnAxis","abstract":"<p>The axis to turn around for the entity.</p>","parent_name":"HasTurnTouch"},"Protocols/HasTurnTouch.html#/s:9RealityUI12HasTurnTouchPAAE11maxDistanceSfSgvp":{"name":"maxDistance","abstract":"<p>Maximum distance away from the center of the object where the turn touch is active</p>","parent_name":"HasTurnTouch"},"Protocols/HasRUIMaterials.html#/s:9RealityUI15HasRUIMaterialsP15updateMaterialsyyF":{"name":"updateMaterials()","abstract":"<p>All RealityUI Entities should have a method for updating all the materials","parent_name":"HasRUIMaterials"},"Protocols/HasRUI.html#/s:9RealityUI6HasRUIPAAE10ruiEnabledSbvp":{"name":"ruiEnabled","abstract":"<p>A Boolean value that determines whether touch events are ignored on this RealityUI Entity</p>","parent_name":"HasRUI"},"Protocols/HasRUI.html#/s:9RealityUI6HasRUIPAAE18respondsToLightingSbvp":{"name":"respondsToLighting","abstract":"<p>A Boolean value that determines whether this Entity&rsquo;s materials respond to lighting</p>","parent_name":"HasRUI"},"Protocols/HasRUI.html#/s:9RealityUI6HasRUIPAAE07replaceD04withyAA12RUIComponentV_tF":{"name":"replaceRUI(with:)","abstract":"<p>Replace the current RUIComponent</p>","parent_name":"HasRUI"},"Protocols/HasRUI.html#/s:9RealityUI6HasRUIPAAE0D0AA12RUIComponentVvp":{"name":"RUI","abstract":"<p>RealityUI Component for the entity.</p>","parent_name":"HasRUI"},"Protocols/HasClick.html#/s:9RealityUI8HasClickP9tapActionyAaB_p_s5SIMD3VySfGSgtcSgvp":{"name":"tapAction","abstract":"<p>Action to be applied on successfully tapping an Entity.</p>","parent_name":"HasClick"},"Protocols/HasClick.html":{"name":"HasClick","abstract":"<p>An interface used for entities which have actions upon being clicked</p>"},"Protocols/HasRUI.html":{"name":"HasRUI","abstract":"<p>An interface used for all entities in the RealityUI package</p>"},"Protocols/HasRUIMaterials.html":{"name":"HasRUIMaterials","abstract":"<p>An interface used for RealityUI entities that have materials generated from colours"},"Protocols/HasTurnTouch.html":{"name":"HasTurnTouch","abstract":"<p>An interface used for entities which are to be rotated via one finger drag gestures</p>"},"Protocols/HasButton.html":{"name":"HasButton","abstract":"<p>An interface that provides a button component that defines the visual appearance.</p>"},"Protocols/HasARTouch.html":{"name":"HasARTouch","abstract":"<p>An interface used for RealityUI entities which respond to gestures beyond just a tap."},"Protocols.html#/s:9RealityUI11HasPanTouchP":{"name":"HasPanTouch","abstract":"<p>An interface used for all entities that have long touches where movement"},"Protocols.html#/s:9RealityUI16HasTouchUpInsideP":{"name":"HasTouchUpInside","abstract":"<p>An interface used for all entities that have long touches where movement"},"Protocols/HasSlider.html":{"name":"HasSlider","abstract":"<p>An interface used for an entity where a thumb is dragged along a fixed space.</p>"},"Protocols/HasStepper.html":{"name":"HasStepper","abstract":"<p>An interface used for entities with mutliple click actions, like RUIStepper.</p>"},"Protocols/HasSwitch.html":{"name":"HasSwitch","abstract":"<p>An interface used for all entities that have a toggling option</p>"},"Protocols/HasText.html":{"name":"HasText","abstract":"<p>An interface used for all entities that render text</p>"},"Extensions/ARView.html#/s:10RealityKit6ARViewC0A2UIE06enableA10UIGesturesyyA2DC10RUIGestureVF":{"name":"enableRealityUIGestures(_:)","abstract":"<p>Use this method on your ARView to add GestureRecognisers for different RealityKit elements in your scene.","parent_name":"ARView"},"Extensions/Entity.html#/s:10RealityKit6EntityC0A2UIE7ruiSpin2by6period5times10completionys5SIMD3VySfG_SdSiyycSgtF":{"name":"ruiSpin(by:period:times:completion:)","abstract":"<p>Spin an Entity on an axis.</p>","parent_name":"Entity"},"Extensions/Entity.html#/s:10RealityKit6EntityC0A2UIE8ruiShake2by6period5times10completionySo10simd_quatfa_SdSiyycSgtF":{"name":"ruiShake(by:period:times:completion:)","abstract":"<p>Shake an Entity by a quaternion angle.</p>","parent_name":"Entity"},"Extensions/Entity.html#/s:10RealityKit6EntityC0A2UIE11ruiStopAnim6tryfor10completionys6UInt64V_yACcSgtF":{"name":"ruiStopAnim(tryfor:completion:)","abstract":"<p>Stop all animations on an object, not letting any slip through the net.</p>","parent_name":"Entity"},"Extensions/Entity.html":{"name":"Entity"},"Extensions/ARView.html":{"name":"ARView"},"Classes/RealityUI/RUIGesture.html#/s:9RealityUIAAC10RUIGestureV8rawValueSivp":{"name":"rawValue","abstract":"<p>Integer raw value used by the OptionSet</p>","parent_name":"RUIGesture"},"Classes/RealityUI/RUIGesture.html#/s:9RealityUIAAC10RUIGestureV8rawValueADSi_tcfc":{"name":"init(rawValue:)","abstract":"<p>Initialise a new option set</p>","parent_name":"RUIGesture"},"Classes/RealityUI/RUIGesture.html#/s:9RealityUIAAC10RUIGestureV3tapADvpZ":{"name":"tap","abstract":"<p>OptionSet value for tap gestures.</p>","parent_name":"RUIGesture"},"Classes/RealityUI/RUIGesture.html#/s:9RealityUIAAC10RUIGestureV9longTouchADvpZ":{"name":"longTouch","abstract":"<p>OptionSet value for long touch gestures.</p>","parent_name":"RUIGesture"},"Classes/RealityUI/RUIGesture.html#/s:9RealityUIAAC10RUIGestureV3allADvpZ":{"name":"all","abstract":"<p>Encapsulates all the possible values of this OptionSet</p>","parent_name":"RUIGesture"},"Classes/RealityUI.html#/s:9RealityUIAAC18registerComponentsyyFZ":{"name":"registerComponents()","abstract":"<p>Registers RealityUI&rsquo;s component types. Call this before creating any RealityUI classes to avoid issues.","parent_name":"RealityUI"},"Classes/RealityUI.html#/s:9RealityUIAAC19startingOrientationSo10simd_quatfaSgvpZ":{"name":"startingOrientation","abstract":"<p>Orientation of all RealityUI Entities upon creation. If nil, none will be set.</p>","parent_name":"RealityUI"},"Classes/RealityUI.html#/s:9RealityUIAAC15longGestureMask0A3Kit14CollisionGroupVvpZ":{"name":"longGestureMask","abstract":"<p>Mask to exclude entities from being hit by the long/panning gesture</p>","parent_name":"RealityUI"},"Classes/RealityUI.html#/s:9RealityUIAAC14tapGestureMask0A3Kit14CollisionGroupVvpZ":{"name":"tapGestureMask","abstract":"<p>Mask to exclude entities from being hit by the tap gesture.</p>","parent_name":"RealityUI"},"Classes/RealityUI.html#/s:9RealityUIAAC14enableGestures_2onyAB10RUIGestureV_0A3Kit6ARViewCtFZ":{"name":"enableGestures(_:on:)","abstract":"<p>Use this to add GestureRecognisers for different RealityUI elements in your scene.","parent_name":"RealityUI"},"Classes/RealityUI/RUIGesture.html":{"name":"RUIGesture","abstract":"<p>Different type of gestures used by RealityUI and set to an ARView object.</p>","parent_name":"RealityUI"},"Classes/RealityUI.html#/s:9RealityUIAAC15enabledGesturesSDy0A3Kit6ARViewCAB10RUIGestureVGvp":{"name":"enabledGestures","abstract":"<p>Gestures that have been enalbed, <code>.tap</code>, <code>.longTouch</code> etc</p>","parent_name":"RealityUI"},"Classes/RealityUI.html#/s:9RealityUIAAC13RUIComponentsSay0A3Kit9Component_pXpGvpZ":{"name":"RUIComponents","abstract":"<p>All the components used by RealityUI</p>","parent_name":"RealityUI"},"Classes/RUIText.html#/s:9RealityUI7RUITextC9tapActionyAA8HasClick_p_s5SIMD3VySfGSgtcSgvp":{"name":"tapAction","abstract":"<p>Action to occus when the user taps on this Entity.</p>","parent_name":"RUIText"},"Classes/RUIText.html#/s:9RealityUI7RUITextC4with5width6height4font9extrusion5colorACSS_12CoreGraphics7CGFloatVALSo6NSFontCSfSo7NSColorCtcfc":{"name":"init(with:width:height:font:extrusion:color:)","abstract":"<p>Create a new RUIText object, adding text to your RealityKit scene.</p>","parent_name":"RUIText"},"Classes/RUIText.html#/s:9RealityUI7RUITextC13textComponent3RUI9tapActionAcA04TextE0VSg_AA12RUIComponentVyAA8HasClick_p_s5SIMD3VySfGSgtcSgtcfc":{"name":"init(textComponent:RUI:tapAction:)","abstract":"<p>Creates a RealityUI Text entity.</p>","parent_name":"RUIText"},"Classes/RUIText.html#/s:9RealityUI7RUITextCACycfc":{"name":"init()","abstract":"<p>Initialise the RUIText object with no text and default properties.</p>","parent_name":"RUIText"},"Classes/RUIText.html#/largeFont":{"name":"largeFont","abstract":"<p>Used as default larger text to be displayed in the scene</p>","parent_name":"RUIText"},"Classes/RUIText.html#/mediumFont":{"name":"mediumFont","abstract":"<p>Used as default medium text to be displayed in the scene</p>","parent_name":"RUIText"},"Classes/RUIText.html#/s:9RealityUI7RUITextC9largeFontSo6NSFontCvpZ":{"name":"largeFont","abstract":"<p>Used as default larger text to be displayed in the scene</p>","parent_name":"RUIText"},"Classes/RUIText.html#/s:9RealityUI7RUITextC10mediumFontSo6NSFontCvpZ":{"name":"mediumFont","abstract":"<p>Used as default medium text to be displayed in the scene</p>","parent_name":"RUIText"},"Classes/RUISwitch.html#/s:9RealityUI8HasClickP9tapActionyAaB_p_s5SIMD3VySfGSgtcSgvp":{"name":"tapAction","parent_name":"RUISwitch"},"Classes/RUISwitch.html#/s:9RealityUI9RUISwitchC13switchChangedyAA9HasSwitch_pcSgvp":{"name":"switchChanged","abstract":"<p>Switch&rsquo;s isOn property has changed</p>","parent_name":"RUISwitch"},"Classes/RUISwitch.html#/s:9RealityUI9RUISwitchC10switchness3RUI15changedCallbackAcA15SwitchComponentVSg_AA12RUIComponentVSgyAA03HasH0_pcSgtcfc":{"name":"init(switchness:RUI:changedCallback:)","abstract":"<p>Creates a RealityUI Switch entity with optional <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SwitchComponent.html\">SwitchComponent</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RUIComponent.html\">RUIComponent</a></code> and <code>changedCallback</code>.</p>","parent_name":"RUISwitch"},"Classes/RUISwitch.html#/s:9RealityUI9RUISwitchCACycfc":{"name":"init()","abstract":"<p>Create a RUISwitch entity with the default styling.</p>","parent_name":"RUISwitch"},"Classes/RUIStepper.html#/s:9RealityUI8HasClickP9tapActionyAaB_p_s5SIMD3VySfGSgtcSgvp":{"name":"tapAction","parent_name":"RUIStepper"},"Classes/RUIStepper.html#/s:9RealityUI10RUIStepperC9upTriggeryAA10HasStepper_pcSgvp":{"name":"upTrigger","abstract":"<p>Stepper&rsquo;s positive button has been pressed</p>","parent_name":"RUIStepper"},"Classes/RUIStepper.html#/s:9RealityUI10RUIStepperC11downTriggeryAA10HasStepper_pcSgvp":{"name":"downTrigger","abstract":"<p>Stepper&rsquo;s negative button has been pressed</p>","parent_name":"RUIStepper"},"Classes/RUIStepper.html#/s:9RealityUI10RUIStepperC7stepper3RUI9upTrigger04downG0AcA16StepperComponentVSg_AA12RUIComponentVSgyAA03HasI0_pcSgAOtcfc":{"name":"init(stepper:RUI:upTrigger:downTrigger:)","abstract":"<p>Creates a RealityUI Stepper entity with optional <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/StepperComponent.html\">StepperComponent</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RUIComponent.html\">RUIComponent</a></code>,","parent_name":"RUIStepper"},"Classes/RUIStepper.html#/s:9RealityUI10RUIStepperC5style9upTrigger04downF0AcA16StepperComponentV5StyleO_yAA03HasH0_pcSgALtcfc":{"name":"init(style:upTrigger:downTrigger:)","abstract":"<p>Create a RUIStepper entity with default properties for a given style.</p>","parent_name":"RUIStepper"},"Classes/RUIStepper.html#/s:9RealityUI10RUIStepperC9upTrigger04downE0ACyAA10HasStepper_pcSg_AGtcfc":{"name":"init(upTrigger:downTrigger:)","abstract":"<p>Create a RUIStepper entity with the default style of <code>.plusMinus</code>.</p>","parent_name":"RUIStepper"},"Classes/RUIStepper.html#/s:9RealityUI10RUIStepperCACycfc":{"name":"init()","parent_name":"RUIStepper"},"Classes/RUISlider.html#/s:9RealityUI10HasARTouchP14collisionPlaneSo13simd_float4x4aSgvp":{"name":"collisionPlane","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderC13sliderUpdatedyAA9HasSlider_p_AA0G9ComponentV12SlidingStateOtcSgvp":{"name":"sliderUpdated","abstract":"<p>Called whenever the slider value updates.","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderC6slider3RUI14updateCallbackAcA15SliderComponentVSg_AA12RUIComponentVSgyAA03HasH0_p_AH12SlidingStateOtcSgtcfc":{"name":"init(slider:RUI:updateCallback:)","abstract":"<p>Creates a RealityUI Slider entity with optional <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SliderComponent.html\">SliderComponent</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RUIComponent.html\">RUIComponent</a></code> and <code>updateCallback</code>.</p>","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderC6length5start5steps14updateCallbackACSf_SfSiyAA9HasSlider_p_AA0J9ComponentV12SlidingStateOtcSgtcfc":{"name":"init(length:start:steps:updateCallback:)","abstract":"<p>Creates a RealityUI Slider entity with default visual appearance</p>","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderC6length5start14updateCallbackACSf_SfyAA9HasSlider_p_AA0I9ComponentV12SlidingStateOtcSgtcfc":{"name":"init(length:start:updateCallback:)","abstract":"<p>Creates a RealityUI Slider entity with default visual appearance</p>","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderCACycfc":{"name":"init()","abstract":"<p>Create an RUISlider with default configurations</p>","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderC14arTouchStarted_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchStarted(_:hasCollided:)","abstract":"<p>Called when a new touch has begun on an Entity</p>","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI9RUISliderC14arTouchUpdated_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchUpdated(_:hasCollided:)","abstract":"<p>Called when a touch is still on screen or a mouse is still down.</p>","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI10HasARTouchP16arTouchCancelledyyF":{"name":"arTouchCancelled()","parent_name":"RUISlider"},"Classes/RUISlider.html#/s:9RealityUI10HasARTouchP12arTouchEndedyys5SIMD3VySfGSgF":{"name":"arTouchEnded(_:)","parent_name":"RUISlider"},"Classes/RUIButton.html#/s:9RealityUI10HasARTouchP14collisionPlaneSo13simd_float4x4aSgvp":{"name":"collisionPlane","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI9HasButtonP16touchUpCompletedyAaB_pcSgvp":{"name":"touchUpCompleted","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI9RUIButtonC6button3RUI14updateCallbackAcA15ButtonComponentVSg_AA12RUIComponentVSgyAA03HasH0_pcSgtcfc":{"name":"init(button:RUI:updateCallback:)","abstract":"<p>Creates a RealityUI Button entity with optional <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ButtonComponent.html\">ButtonComponent</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RUIComponent.html\">RUIComponent</a></code> and <code>updateCallback</code>.</p>","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI9RUIButtonCACycfc":{"name":"init()","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI10HasARTouchP14arTouchStarted_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchStarted(_:hasCollided:)","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI10HasARTouchP14arTouchUpdated_11hasCollidedys5SIMD3VySfG_SbtF":{"name":"arTouchUpdated(_:hasCollided:)","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI10HasARTouchP16arTouchCancelledyyF":{"name":"arTouchCancelled()","parent_name":"RUIButton"},"Classes/RUIButton.html#/s:9RealityUI10HasARTouchP12arTouchEndedyys5SIMD3VySfGSgF":{"name":"arTouchEnded(_:)","parent_name":"RUIButton"},"Classes/RUIButton.html":{"name":"RUIButton","abstract":"<p>A  RealityUI Button to be added to a RealityKit scene.</p>"},"Classes/RUISlider.html":{"name":"RUISlider","abstract":"<p>A  RealityUI Slider to be added to a RealityKit scene.</p>"},"Classes/RUIStepper.html":{"name":"RUIStepper","abstract":"<p>A new RealityUI Stepper to be added to your RealityKit scene.</p>"},"Classes/RUISwitch.html":{"name":"RUISwitch","abstract":"<p>A  RealityUI Switch to be added to a RealityKit scene.</p>"},"Classes/RUIText.html":{"name":"RUIText","abstract":"<p>A RealityUI Text object to be added to a RealityKit scene.</p>"},"Classes/RealityUI.html":{"name":"RealityUI","abstract":"<p>RealityUI contains some properties for RealityUI to run in your application."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}